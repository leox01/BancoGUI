/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package vista;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import modelo.CuentaAhorro;

/**
 *
 * @author leopoldomorales
 */
public class MainView extends javax.swing.JFrame {
    
    public static int indexRow = -1;
    
    public static boolean botonesActivos=true;

    /** Creates new form MainView */
    public MainView() {
        controlador.Controlador.leerArchivo();
       
        initComponents();
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        myTable = new javax.swing.JTable();
        registrarButton = new javax.swing.JButton();
        editarButton = new javax.swing.JButton();
        eliminarButton = new javax.swing.JButton();
        buscarTextField = new javax.swing.JTextField();
        buscarButton = new javax.swing.JButton();
        limpiarButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        myTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Tipo de Cuenta", "Numero de Cuenta", "Nombre", "Dirección", "Teléfono", "E-mail", "Saldo"
            }
        ));
        myTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                myTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(myTable);

        registrarButton.setText("Registrar");
        registrarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarButtonActionPerformed(evt);
            }
        });

        editarButton.setText("Editar");
        editarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarButtonActionPerformed(evt);
            }
        });

        eliminarButton.setText("Eliminar");
        eliminarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarButtonActionPerformed(evt);
            }
        });

        buscarTextField.setText("Buscar por numero de cuenta");
        buscarTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                buscarTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                buscarTextFieldFocusLost(evt);
            }
        });

        buscarButton.setText("Buscar");
        buscarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarButtonActionPerformed(evt);
            }
        });

        limpiarButton.setText("Limpiar");
        limpiarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(registrarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(editarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(eliminarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                        .addComponent(buscarTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buscarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(limpiarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eliminarButton)
                    .addComponent(editarButton)
                    .addComponent(registrarButton)
                    .addComponent(limpiarButton)
                    .addComponent(buscarTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registrarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarButtonActionPerformed
       
       new RegistrarView("Registrar").setVisible(true);
       botonesActivos = false;
       actualizarBotones();
    }//GEN-LAST:event_registrarButtonActionPerformed

    private void editarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarButtonActionPerformed
       
        System.out.println("Editar presionado" +indexRow);
        
        
        if(indexRow!=-1){
            
            String numeroCuentaString = myTable.getValueAt(indexRow, 1).toString();
           
            try {
                int numeroCuentaInt = Integer.parseInt(numeroCuentaString);
                
                
                CuentaAhorro cuentaAhorro = controlador.Controlador.buscarCuentaAhorro(numeroCuentaInt);
                
               
                if(cuentaAhorro.getNumeroCuenta()!=-1){
                    RegistrarView registrarView = new RegistrarView("Editar");
                    registrarView.cuentaAhorro = cuentaAhorro;
                    registrarView.setVisible(true);
                    botonesActivos = false;
                    actualizarBotones();
                
                }else{
                    System.out.println("No existe esa cuenta" + cuentaAhorro.getNumeroCuenta());
                }
                
                
           
            
            } catch (Exception e) {
                //mostrarMensaje("Error", "Error al intentar convertir el String a int");
            }
        }else{
            System.out.println("index es -1");
        }
        
       
    }//GEN-LAST:event_editarButtonActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        
       actualizarBotones();
       dibujarUsuariosEnLaTabla();
       botonesDeLaVista(false);
      
    }//GEN-LAST:event_formWindowActivated

    private void myTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_myTableMouseClicked
       indexRow = myTable.rowAtPoint(evt.getPoint());
        botonesDeLaVista(true);
    }//GEN-LAST:event_myTableMouseClicked

    private void eliminarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarButtonActionPerformed
        
        //Obtener el index donde el usuario dio el click 
      
        if(indexRow!=-1){
            String numeroCuentaString = myTable.getValueAt(indexRow, 1).toString();
            int numeroCuentaInt = Integer.parseInt(numeroCuentaString);
            
            CuentaAhorro cuentaAhorro = controlador.Controlador.buscarCuentaAhorro(numeroCuentaInt);

            if(cuentaAhorro.getNumeroCuenta()!=-1){
                //Mostrar un mensaje donde le preguntamos al usaurio si quiere eliminar o no
                int respuesta =  JOptionPane.showConfirmDialog(this,"Mensaje", "título", 0);
                if (respuesta == 0){
                
                    controlador.Controlador.eliminarCuentaDeAhorro(numeroCuentaInt);
                    dibujarUsuariosEnLaTabla();
                }
              

            }else{
                System.out.println("No existe esa cuenta" + cuentaAhorro.getNumeroCuenta());
            }
            
         
        }
        
    }//GEN-LAST:event_eliminarButtonActionPerformed

    private void buscarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarButtonActionPerformed
       
       String numeroDeCuentaBuscadoString =  buscarTextField.getText();
        try {
            int numeroDeCuentaBuscado = Integer.parseInt(numeroDeCuentaBuscadoString);
            
            
            dibujarUsuariosBuscadosEnLaTabla(numeroDeCuentaBuscado);
            
        } catch (Exception e) {
            System.out.println("No es un número de cuenta válido");
        }
    }//GEN-LAST:event_buscarButtonActionPerformed

    private void limpiarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarButtonActionPerformed
        buscarTextField.setText("Buscar por numero de cuenta");
        dibujarUsuariosEnLaTabla();
       
    }//GEN-LAST:event_limpiarButtonActionPerformed

    private void buscarTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_buscarTextFieldFocusGained
       buscarTextField.setText("");
    }//GEN-LAST:event_buscarTextFieldFocusGained

    private void buscarTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_buscarTextFieldFocusLost
       if(buscarTextField.getText().equals("")){
           buscarTextField.setText("Buscar por numero de cuenta");
       }
    }//GEN-LAST:event_buscarTextFieldFocusLost

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        controlador.Controlador.guardarArchivo();
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscarButton;
    private javax.swing.JTextField buscarTextField;
    private javax.swing.JButton editarButton;
    private javax.swing.JButton eliminarButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton limpiarButton;
    private static javax.swing.JTable myTable;
    private javax.swing.JButton registrarButton;
    // End of variables declaration//GEN-END:variables

    private void actualizarBotones() {
       registrarButton.setEnabled(botonesActivos);
       limpiarButton.setEnabled(botonesActivos);
       buscarButton.setEnabled(botonesActivos);
       editarButton.setEnabled(botonesActivos);
       eliminarButton.setEnabled(botonesActivos);
    }
    
    public static void dibujarUsuariosEnLaTabla(){
      
       
        DefaultTableModel tableModel = (DefaultTableModel) myTable.getModel(); 
        
        tableModel.setRowCount(0); //limpiar la tabla 
        
        ArrayList<CuentaAhorro> cuentas = controlador.Controlador.getTodasLasCuentasDeAhorros();
        
        for (CuentaAhorro cuenta : cuentas) {
            Object filaCuenta[] = new Object[7];
            
            filaCuenta[0] = cuenta.getTipoDeCuenta();
            filaCuenta[1] = cuenta.getNumeroCuenta();
            filaCuenta[2] = cuenta.getNombre();
            filaCuenta[3] = cuenta.getDireccion();
            filaCuenta[4] = cuenta.getTelefono();
            filaCuenta[5] = cuenta.getEmail();
            filaCuenta[6] = cuenta.getSaldo();
            tableModel.addRow(filaCuenta);
        }
        myTable = new JTable(tableModel);
    
    }
    
    public static void dibujarUsuariosBuscadosEnLaTabla(int numeroDeCuenta){
      
       
        DefaultTableModel tableModel = (DefaultTableModel) myTable.getModel(); 
        
        tableModel.setRowCount(0); //limpiar la tabla 
        
        CuentaAhorro cuentaAhorro = controlador.Controlador.buscarCuentaAhorro(numeroDeCuenta);
        
        
        if (cuentaAhorro.getNumeroCuenta()!= -1){
             ArrayList<CuentaAhorro> cuentas = new ArrayList<>();
            cuentas.add(cuentaAhorro);

            for (CuentaAhorro cuenta : cuentas) {
                Object filaCuenta[] = new Object[7];

                filaCuenta[0] = cuenta.getTipoDeCuenta();
                filaCuenta[1] = cuenta.getNumeroCuenta();
                filaCuenta[2] = cuenta.getNombre();
                filaCuenta[3] = cuenta.getDireccion();
                filaCuenta[4] = cuenta.getTelefono();
                filaCuenta[5] = cuenta.getEmail();
                filaCuenta[6] = cuenta.getSaldo();
                tableModel.addRow(filaCuenta);
            }
            myTable = new JTable(tableModel);
        
        }
       
    
    }
    
    public void botonesDeLaVista(boolean estado){
    
        editarButton.setEnabled(estado);
        eliminarButton.setEnabled(estado);
    
    }
    
}
